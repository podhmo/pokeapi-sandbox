type AlertsAlert {
    active: bool!
    id: ID!
    message: String!
}

type AuthGroup {
    id: ID!
    name: String!
    group_auth_permissions: [AuthGroupPermission]
    group_auth_users: [AuthUserGroup]
}

type AuthGroupPermission {
    group_id: Integer!
    id: ID!
    permission_id: Integer!
    auth_group: AuthGroup
    auth_permission: AuthPermission
}

type AuthPermission {
    codename: String!
    content_type_id: Integer!
    id: ID!
    name: String!
    django_content_type: DjangoContentType
    permission_auth_groups: [AuthGroupPermission]
    permission_auth_users: [AuthUserPermission]
}

type AuthUser {
    date_joined: datetime!
    email: String!
    first_name: String!
    id: ID!
    is_active: bool!
    is_staff: bool!
    is_superuser: bool!
    last_login: datetime
    last_name: String!
    password: String!
    username: String!
    user_auth_groups: [AuthUserGroup]
    user_auth_permissions: [AuthUserPermission]
    user_django_admin_logs: [DjangoAdminLog]
    user_tastypie_apikeys: [TastypieApikey]
}

type AuthUserGroup {
    group_id: Integer!
    id: ID!
    user_id: Integer!
    auth_group: AuthGroup
    auth_user: AuthUser
}

type AuthUserPermission {
    id: ID!
    permission_id: Integer!
    user_id: Integer!
    auth_permission: AuthPermission
    auth_user: AuthUser
}

type CorsheadersCorsmodel {
    cors: String!
    id: ID!
}

type DjangoAdminLog {
    action_flag: Integer!
    action_time: datetime!
    change_message: String!
    content_type_id: Integer
    id: ID!
    object_id: String
    object_repr: String!
    user_id: Integer!
    auth_user: AuthUser
    django_content_type: DjangoContentType
}

type DjangoContentType {
    app_label: String!
    id: ID!
    model: String!
    content_type_auth_permissions: [AuthPermission]
    content_type_django_admin_logs: [DjangoAdminLog]
}

type DjangoMigration {
    app: String!
    applied: datetime!
    id: ID!
    name: String!
}

type DjangoSession {
    expire_date: datetime!
    session_data: String!
    session_key: ID!
}

type DjangoSite {
    domain: String!
    id: ID!
    name: String!
}

type HitsResourceview {
    count: Integer!
    date: date!
    id: ID!
    version: Integer!
}

type PokemonAbility {
    ability_id: Integer!
    id: ID!
    pokemon_id: Integer!
    pokemon: Pokemon
    pokemon_ability: PokemonAbility
}

type PokemonDescription {
    description_id: Integer!
    id: ID!
    pokemon_id: Integer!
    pokemon: Pokemon
    pokemon_description: PokemonDescription
}

type PokemonDescriptionGame {
    description_id: Integer!
    game_id: Integer!
    id: ID!
    pokemon_description: PokemonDescription
    pokemon_game: PokemonGame
}

type PokemonEgggroup {
    created: datetime!
    id: ID!
    modified: datetime!
    name: String!
    egggroup_pokemon_egg_groups: [PokemonEggGroup]
}

type PokemonEvolution {
    created: datetime!
    detail: String
    frm_id: Integer
    id: ID!
    level: Integer!
    method: String!
    modified: datetime!
    to_id: Integer
    pokemon_frm: Pokemon
    pokemon_to: Pokemon
}

type PokemonGame {
    created: datetime!
    generation: Integer!
    id: ID!
    modified: datetime!
    name: String!
    release_year: Integer!
    game_pokemon_descriptions: [PokemonDescriptionGame]
}

type PokemonMove {
    accuracy: Integer!
    category: String!
    created: datetime!
    description: String!
    id: ID!
    modified: datetime!
    name: String!
    power: Integer!
    pp: Integer!
    move_pokemon_etypes: [PokemonMoveEtype]
    move_pokemon_movepokemons: [PokemonMovepokemon]
}

type PokemonMoveEtype {
    id: ID!
    move_id: Integer!
    type_id: Integer!
    pokemon_move: PokemonMove
    pokemon_type: PokemonType
}

type PokemonMovepokemon {
    created: datetime!
    id: ID!
    learn_type: String!
    level: Integer
    modified: datetime!
    move_id: Integer
    pokemon_id: Integer
    pokemon: Pokemon
    pokemon_move: PokemonMove
}

type PokemonPokedex {
    created: datetime!
    id: ID!
    modified: datetime!
    name: String!
}

type Pokemon {
    base_experience: Integer!
    height: Integer!
    id: ID!
    is_default: bool!
    name: String!
    order: Integer
    pokemon_species_id: Integer
    weight: Integer!
    pokemon_encounters: [Encounter]
    pokemon_pokemonabilities: [Pokemonability]
    pokemon_pokemonforms: [Pokemonform]
    pokemon_pokemongameindices: [Pokemongameindex]
    pokemon_pokemonitems: [Pokemonitem]
    pokemon_pokemonmoves: [Pokemonmove]
    pokemon_pokemonsprites: [Pokemonsprite]
    pokemon_pokemonstats: [Pokemonstat]
    pokemon_pokemontypes: [Pokemontype]
    pokemonspecy_pokemon_specy: Pokemonspecy
}

type PokemonEggGroup {
    egggroup_id: Integer!
    id: ID!
    pokemon_id: Integer!
    pokemon: Pokemon
    pokemon_egggroup: PokemonEgggroup
}

type PokemonSprite {
    created: datetime!
    id: ID!
    image: String!
    modified: datetime!
    name: String!
    sprite_pokemons: [PokemonSprite]
}

type PokemonType {
    created: datetime!
    id: ID!
    modified: datetime!
    name: String!
    frm_pokemon_typecharts: [PokemonTypechart]
    to_pokemon_typecharts: [PokemonTypechart]
    type_pokemon_move_etypes: [PokemonMoveEtype]
    type_pokemons: [PokemonType]
}

type PokemonTypechart {
    created: datetime!
    frm_id: Integer
    id: ID!
    modified: datetime!
    to_id: Integer
    ttype: String
    pokemon_type_frm: PokemonType
    pokemon_type_to: PokemonType
}

type Ability {
    generation_id: Integer
    id: ID!
    is_main_series: bool!
    name: String!
    ability_abilitychanges: [Abilitychange]
    ability_abilityeffecttexts: [Abilityeffecttext]
    ability_abilityflavortexts: [Abilityflavortext]
    ability_abilitynames: [Abilityname]
    ability_pokemonabilities: [Pokemonability]
    generation: Generation
}

type Abilitychange {
    ability_id: Integer
    id: ID!
    version_group_id: Integer
    ability: Ability
    ability_change_abilitychangeeffecttexts: [Abilitychangeeffecttext]
    versiongroup_version_group: Versiongroup
}

type Abilitychangeeffecttext {
    ability_change_id: Integer
    effect: String!
    id: ID!
    language_id: Integer
    abilitychange_ability_change: Abilitychange
    language: Language
}

type Abilityeffecttext {
    ability_id: Integer
    effect: String!
    id: ID!
    language_id: Integer
    short_effect: String!
    ability: Ability
    language: Language
}

type Abilityflavortext {
    ability_id: Integer
    flavor_text: String!
    id: ID!
    language_id: Integer
    version_group_id: Integer
    ability: Ability
    language: Language
    versiongroup_version_group: Versiongroup
}

type Abilityname {
    ability_id: Integer
    id: ID!
    language_id: Integer
    name: String!
    ability: Ability
    language: Language
}

type Berry {
    berry_firmness_id: Integer
    growth_time: Integer!
    id: ID!
    item_id: Integer
    max_harvest: Integer!
    name: String!
    natural_gift_power: Integer!
    natural_gift_type_id: Integer
    size: Integer!
    smoothness: Integer!
    soil_dryness: Integer!
    berry_berryflavormaps: [Berryflavormap]
    berryfirmness_berry_firmness: Berryfirmnes
    item: Item
    type_natural_gift: Type
}

type Berryfirmnes {
    id: ID!
    name: String!
    berry_firmness_berryfirmnessnames: [Berryfirmnessname]
    berry_firmnesses: [Berry]
}

type Berryfirmnessname {
    berry_firmness_id: Integer
    id: ID!
    language_id: Integer
    name: String!
    berryfirmness_berry_firmness: Berryfirmnes
    language: Language
}

type Berryflavor {
    contest_type_id: Integer
    id: ID!
    name: String!
    berry_flavor_berryflavormaps: [Berryflavormap]
    berry_flavor_berryflavornames: [Berryflavorname]
    contesttype_contest_type: Contesttype
    hates_flavor_natures: [Nature]
    likes_flavor_natures: [Nature]
}

type Berryflavormap {
    berry_flavor_id: Integer
    berry_id: Integer
    id: ID!
    potency: Integer!
    berry: Berry
    berryflavor_berry_flavor: Berryflavor
}

type Berryflavorname {
    berry_flavor_id: Integer
    id: ID!
    language_id: Integer
    name: String!
    berryflavor_berry_flavor: Berryflavor
    language: Language
}

type Characteristic {
    gene_mod_5: Integer!
    id: ID!
    stat_id: Integer
    characteristic_characteristicdescriptions: [Characteristicdescription]
    stat: Stat
}

type Characteristicdescription {
    characteristic_id: Integer
    description: String!
    id: ID!
    language_id: Integer
    characteristic: Characteristic
    language: Language
}

type Contestcombo {
    first_move_id: Integer
    id: ID!
    second_move_id: Integer
    move_first: Move
    move_second: Move
}

type Contesteffect {
    appeal: Integer!
    id: ID!
    jam: Integer!
    contest_effect_contesteffecteffecttexts: [Contesteffecteffecttext]
    contest_effect_contesteffectflavortexts: [Contesteffectflavortext]
    contest_effect_moves: [Move]
}

type Contesteffecteffecttext {
    contest_effect_id: Integer
    effect: String!
    id: ID!
    language_id: Integer
    contesteffect_contest_effect: Contesteffect
    language: Language
}

type Contesteffectflavortext {
    contest_effect_id: Integer
    flavor_text: String!
    id: ID!
    language_id: Integer
    contesteffect_contest_effect: Contesteffect
    language: Language
}

type Contesttype {
    id: ID!
    name: String!
    contest_type_berryflavors: [Berryflavor]
    contest_type_contesttypenames: [Contesttypename]
    contest_type_moves: [Move]
}

type Contesttypename {
    color: String!
    contest_type_id: Integer
    flavor: String!
    id: ID!
    language_id: Integer
    name: String!
    contesttype_contest_type: Contesttype
    language: Language
}

type Egggroup {
    id: ID!
    name: String!
    egg_group_egggroupnames: [Egggroupname]
    egg_group_pokemonegggroups: [Pokemonegggroup]
}

type Egggroupname {
    egg_group_id: Integer
    id: ID!
    language_id: Integer
    name: String!
    egggroup_egg_group: Egggroup
    language: Language
}

type Encounter {
    encounter_slot_id: Integer
    id: ID!
    location_area_id: Integer
    max_level: Integer!
    min_level: Integer!
    pokemon_id: Integer
    version_id: Integer
    encounter_encounterconditionvaluemaps: [Encounterconditionvaluemap]
    encounterslot_encounter_slot: Encounterslot
    locationarea_location_area: Locationarea
    pokemon: Pokemon
    version: Version
}

type Encountercondition {
    id: ID!
    name: String!
    encounter_condition_encounterconditionnames: [Encounterconditionname]
    encounter_condition_encounterconditionvalues: [Encounterconditionvalue]
}

type Encounterconditionname {
    encounter_condition_id: Integer
    id: ID!
    language_id: Integer
    name: String!
    encountercondition_encounter_condition: Encountercondition
    language: Language
}

type Encounterconditionvalue {
    encounter_condition_id: Integer
    id: ID!
    is_default: bool!
    name: String!
    encounter_condition_value_encounterconditionvaluemaps: [Encounterconditionvaluemap]
    encounter_condition_value_encounterconditionvaluenames: [Encounterconditionvaluename]
    encountercondition_encounter_condition: Encountercondition
}

type Encounterconditionvaluemap {
    encounter_condition_value_id: Integer
    encounter_id: Integer
    id: ID!
    encounter: Encounter
    encounterconditionvalue_encounter_condition_value: Encounterconditionvalue
}

type Encounterconditionvaluename {
    encounter_condition_value_id: Integer
    id: ID!
    language_id: Integer
    name: String!
    encounterconditionvalue_encounter_condition_value: Encounterconditionvalue
    language: Language
}

type Encountermethod {
    id: ID!
    name: String!
    order: Integer
    encounter_method_encountermethodnames: [Encountermethodname]
    encounter_method_encounterslots: [Encounterslot]
    encounter_method_locationareaencounterrates: [Locationareaencounterrate]
}

type Encountermethodname {
    encounter_method_id: Integer
    id: ID!
    language_id: Integer
    name: String!
    encountermethod_encounter_method: Encountermethod
    language: Language
}

type Encounterslot {
    encounter_method_id: Integer
    id: ID!
    rarity: Integer!
    slot: Integer
    version_group_id: Integer
    encounter_slots: [Encounter]
    encountermethod_encounter_method: Encountermethod
    versiongroup_version_group: Versiongroup
}

type Evolutionchain {
    baby_trigger_item_id: Integer
    id: ID!
    evolution_chain_pokemonspecies: [Pokemonspecy]
    item_baby_trigger: Item
}

type Evolutiontrigger {
    id: ID!
    name: String!
    evolution_trigger_evolutiontriggernames: [Evolutiontriggername]
    evolution_trigger_pokemonevolutions: [Pokemonevolution]
}

type Evolutiontriggername {
    evolution_trigger_id: Integer
    id: ID!
    language_id: Integer
    name: String!
    evolutiontrigger_evolution_trigger: Evolutiontrigger
    language: Language
}

type Experience {
    experience: Integer!
    growth_rate_id: Integer
    id: ID!
    level: Integer!
    growthrate_growth_rate: Growthrate
}

type Gender {
    id: ID!
    name: String!
    gender_pokemonevolutions: [Pokemonevolution]
}

type Generation {
    id: ID!
    name: String!
    region_id: Integer
    generation_abilities: [Ability]
    generation_generationnames: [Generationname]
    generation_itemgameindices: [Itemgameindex]
    generation_locationgameindices: [Locationgameindex]
    generation_moves: [Move]
    generation_pokemonformgenerations: [Pokemonformgeneration]
    generation_pokemonspecies: [Pokemonspecy]
    generation_typegameindices: [Typegameindex]
    generation_types: [Type]
    generation_versiongroups: [Versiongroup]
    region: Region
}

type Generationname {
    generation_id: Integer
    id: ID!
    language_id: Integer
    name: String!
    generation: Generation
    language: Language
}

type Growthrate {
    formula: String!
    id: ID!
    name: String!
    growth_rate_experiences: [Experience]
    growth_rate_growthratedescriptions: [Growthratedescription]
    growth_rate_machines: [Machine]
    growth_rate_pokemonspecies: [Pokemonspecy]
}

type Growthratedescription {
    description: String!
    growth_rate_id: Integer
    id: ID!
    language_id: Integer
    growthrate_growth_rate: Growthrate
    language: Language
}

type Item {
    cost: Integer
    fling_power: Integer
    id: ID!
    item_category_id: Integer
    item_fling_effect_id: Integer
    name: String!
    baby_trigger_item_evolutionchains: [Evolutionchain]
    evolution_item_pokemonevolutions: [Pokemonevolution]
    held_item_pokemonevolutions: [Pokemonevolution]
    item_berries: [Berry]
    item_itemattributemaps: [Itemattributemap]
    item_itemeffecttexts: [Itemeffecttext]
    item_itemflavortexts: [Itemflavortext]
    item_itemgameindices: [Itemgameindex]
    item_itemnames: [Itemname]
    item_itemsprites: [Itemsprite]
    item_machines: [Machine]
    item_pokemonitems: [Pokemonitem]
    itemcategory_item_category: Itemcategory
    itemflingeffect_item_fling_effect: Itemflingeffect
}

type Itemattribute {
    id: ID!
    name: String!
    item_attribute_itemattributedescriptions: [Itemattributedescription]
    item_attribute_itemattributemaps: [Itemattributemap]
    item_attribute_itemattributenames: [Itemattributename]
}

type Itemattributedescription {
    description: String!
    id: ID!
    item_attribute_id: Integer
    language_id: Integer
    itemattribute_item_attribute: Itemattribute
    language: Language
}

type Itemattributemap {
    id: ID!
    item_attribute_id: Integer
    item_id: Integer
    item: Item
    itemattribute_item_attribute: Itemattribute
}

type Itemattributename {
    id: ID!
    item_attribute_id: Integer
    language_id: Integer
    name: String!
    itemattribute_item_attribute: Itemattribute
    language: Language
}

type Itemcategory {
    id: ID!
    item_pocket_id: Integer
    name: String!
    item_categories: [Item]
    item_category_itemcategorynames: [Itemcategoryname]
    itempocket_item_pocket: Itempocket
}

type Itemcategoryname {
    id: ID!
    item_category_id: Integer
    language_id: Integer
    name: String!
    itemcategory_item_category: Itemcategory
    language: Language
}

type Itemeffecttext {
    effect: String!
    id: ID!
    item_id: Integer
    language_id: Integer
    short_effect: String!
    item: Item
    language: Language
}

type Itemflavortext {
    flavor_text: String!
    id: ID!
    item_id: Integer
    language_id: Integer
    version_group_id: Integer
    item: Item
    language: Language
    versiongroup_version_group: Versiongroup
}

type Itemflingeffect {
    id: ID!
    name: String!
    item_fling_effect_itemflingeffecteffecttexts: [Itemflingeffecteffecttext]
    item_fling_effects: [Item]
}

type Itemflingeffecteffecttext {
    effect: String!
    id: ID!
    item_fling_effect_id: Integer
    language_id: Integer
    itemflingeffect_item_fling_effect: Itemflingeffect
    language: Language
}

type Itemgameindex {
    game_index: Integer!
    generation_id: Integer
    id: ID!
    item_id: Integer
    generation: Generation
    item: Item
}

type Itemname {
    id: ID!
    item_id: Integer
    language_id: Integer
    name: String!
    item: Item
    language: Language
}

type Itempocket {
    id: ID!
    name: String!
    item_pocket_itemcategories: [Itemcategory]
    item_pocket_itempocketnames: [Itempocketname]
}

type Itempocketname {
    id: ID!
    item_pocket_id: Integer
    language_id: Integer
    name: String!
    itempocket_item_pocket: Itempocket
    language: Language
}

type Itemsprite {
    id: ID!
    item_id: Integer
    sprites: String!
    item: Item
}

type Language {
    id: ID!
    iso3166: String!
    iso639: String!
    name: String!
    official: bool!
    order: Integer
    language_abilitychangeeffecttexts: [Abilitychangeeffecttext]
    language_abilityeffecttexts: [Abilityeffecttext]
    language_abilityflavortexts: [Abilityflavortext]
    language_abilitynames: [Abilityname]
    language_berryfirmnessnames: [Berryfirmnessname]
    language_berryflavornames: [Berryflavorname]
    language_characteristicdescriptions: [Characteristicdescription]
    language_contesteffecteffecttexts: [Contesteffecteffecttext]
    language_contesteffectflavortexts: [Contesteffectflavortext]
    language_contesttypenames: [Contesttypename]
    language_egggroupnames: [Egggroupname]
    language_encounterconditionnames: [Encounterconditionname]
    language_encounterconditionvaluenames: [Encounterconditionvaluename]
    language_encountermethodnames: [Encountermethodname]
    language_evolutiontriggernames: [Evolutiontriggername]
    language_generationnames: [Generationname]
    language_growthratedescriptions: [Growthratedescription]
    language_itemattributedescriptions: [Itemattributedescription]
    language_itemattributenames: [Itemattributename]
    language_itemcategorynames: [Itemcategoryname]
    language_itemeffecttexts: [Itemeffecttext]
    language_itemflavortexts: [Itemflavortext]
    language_itemflingeffecteffecttexts: [Itemflingeffecteffecttext]
    language_itemnames: [Itemname]
    language_itempocketnames: [Itempocketname]
    language_languagenames: [Languagename]
    language_locationareanames: [Locationareaname]
    language_locationnames: [Locationname]
    language_moveattributedescriptions: [Moveattributedescription]
    language_moveattributenames: [Moveattributename]
    language_movebattlestylenames: [Movebattlestylename]
    language_movedamageclassdescriptions: [Movedamageclassdescription]
    language_movedamageclassnames: [Movedamageclassname]
    language_moveeffectchangeeffecttexts: [Moveeffectchangeeffecttext]
    language_moveeffecteffecttexts: [Moveeffecteffecttext]
    language_moveflavortexts: [Moveflavortext]
    language_movelearnmethoddescriptions: [Movelearnmethoddescription]
    language_movelearnmethodnames: [Movelearnmethodname]
    language_movemetaailmentnames: [Movemetaailmentname]
    language_movemetacategorydescriptions: [Movemetacategorydescription]
    language_movenames: [Movename]
    language_movetargetdescriptions: [Movetargetdescription]
    language_movetargetnames: [Movetargetname]
    language_naturenames: [Naturename]
    language_palparkareanames: [Palparkareaname]
    language_pokeathlonstatnames: [Pokeathlonstatname]
    language_pokedexdescriptions: [Pokedexdescription]
    language_pokedexnames: [Pokedexname]
    language_pokemoncolornames: [Pokemoncolorname]
    language_pokemonformnames: [Pokemonformname]
    language_pokemonhabitatnames: [Pokemonhabitatname]
    language_pokemonshapenames: [Pokemonshapename]
    language_pokemonspeciesdescriptions: [Pokemonspeciesdescription]
    language_pokemonspeciesflavortexts: [Pokemonspeciesflavortext]
    language_pokemonspeciesnames: [Pokemonspeciesname]
    language_regionnames: [Regionname]
    language_statnames: [Statname]
    language_supercontesteffectflavortexts: [Supercontesteffectflavortext]
    language_typenames: [Typename]
    language_versionnames: [Versionname]
    local_language_languagenames: [Languagename]
}

type Languagename {
    id: ID!
    language_id: Integer
    local_language_id: Integer
    name: String!
    language: Language
    language_local: Language
}

type Location {
    id: ID!
    name: String!
    region_id: Integer
    location_locationareas: [Locationarea]
    location_locationgameindices: [Locationgameindex]
    location_locationnames: [Locationname]
    location_pokemonevolutions: [Pokemonevolution]
    region: Region
}

type Locationarea {
    game_index: Integer!
    id: ID!
    location_id: Integer
    name: String!
    location: Location
    location_area_encounters: [Encounter]
    location_area_locationareaencounterrates: [Locationareaencounterrate]
    location_area_locationareanames: [Locationareaname]
}

type Locationareaencounterrate {
    encounter_method_id: Integer
    id: ID!
    location_area_id: Integer
    rate: Integer!
    version_id: Integer
    encountermethod_encounter_method: Encountermethod
    locationarea_location_area: Locationarea
    version: Version
}

type Locationareaname {
    id: ID!
    language_id: Integer
    location_area_id: Integer
    name: String!
    language: Language
    locationarea_location_area: Locationarea
}

type Locationgameindex {
    game_index: Integer!
    generation_id: Integer
    id: ID!
    location_id: Integer
    generation: Generation
    location: Location
}

type Locationname {
    id: ID!
    language_id: Integer
    location_id: Integer
    name: String!
    language: Language
    location: Location
}

type Machine {
    growth_rate_id: Integer
    id: ID!
    item_id: Integer
    machine_number: Integer!
    move_id: Integer
    version_group_id: Integer
    growthrate_growth_rate: Growthrate
    item: Item
    move: Move
    versiongroup_version_group: Versiongroup
}

type Move {
    accuracy: Integer
    contest_effect_id: Integer
    contest_type_id: Integer
    generation_id: Integer
    id: ID!
    move_damage_class_id: Integer
    move_effect_chance: Integer
    move_effect_id: Integer
    move_target_id: Integer
    name: String!
    power: Integer
    pp: Integer
    priority: Integer
    super_contest_effect_id: Integer
    type_id: Integer
    contesteffect_contest_effect: Contesteffect
    contesttype_contest_type: Contesttype
    first_move_contestcombos: [Contestcombo]
    first_move_supercontestcombos: [Supercontestcombo]
    generation: Generation
    known_move_pokemonevolutions: [Pokemonevolution]
    move_machines: [Machine]
    move_moveattributemaps: [Moveattributemap]
    move_movechanges: [Movechange]
    move_moveflavortexts: [Moveflavortext]
    move_movemeta: [Movemetum]
    move_movemetastatchanges: [Movemetastatchange]
    move_movenames: [Movename]
    move_pokemonmoves: [Pokemonmove]
    movedamageclass_move_damage_class: Movedamageclas
    moveeffect_move_effect: Moveeffect
    movetarget_move_target: Movetarget
    second_move_contestcombos: [Contestcombo]
    second_move_supercontestcombos: [Supercontestcombo]
    supercontesteffect_super_contest_effect: Supercontesteffect
    type: Type
}

type Moveattribute {
    id: ID!
    name: String!
    move_attribute_moveattributedescriptions: [Moveattributedescription]
    move_attribute_moveattributemaps: [Moveattributemap]
    move_attribute_moveattributenames: [Moveattributename]
}

type Moveattributedescription {
    description: String!
    id: ID!
    language_id: Integer
    move_attribute_id: Integer
    language: Language
    moveattribute_move_attribute: Moveattribute
}

type Moveattributemap {
    id: ID!
    move_attribute_id: Integer
    move_id: Integer
    move: Move
    moveattribute_move_attribute: Moveattribute
}

type Moveattributename {
    id: ID!
    language_id: Integer
    move_attribute_id: Integer
    name: String!
    language: Language
    moveattribute_move_attribute: Moveattribute
}

type Movebattlestyle {
    id: ID!
    name: String!
    move_battle_style_movebattlestylenames: [Movebattlestylename]
    move_battle_style_naturebattlestylepreferences: [Naturebattlestylepreference]
}

type Movebattlestylename {
    id: ID!
    language_id: Integer
    move_battle_style_id: Integer
    name: String!
    language: Language
    movebattlestyle_move_battle_style: Movebattlestyle
}

type Movechange {
    accuracy: Integer
    id: ID!
    move_effect_chance: Integer
    move_effect_id: Integer
    move_id: Integer
    power: Integer
    pp: Integer
    type_id: Integer
    version_group_id: Integer
    move: Move
    moveeffect_move_effect: Moveeffect
    type: Type
    versiongroup_version_group: Versiongroup
}

type Movedamageclas {
    id: ID!
    name: String!
    move_damage_class_movedamageclassdescriptions: [Movedamageclassdescription]
    move_damage_class_movedamageclassnames: [Movedamageclassname]
    move_damage_class_stats: [Stat]
    move_damage_class_types: [Type]
    move_damage_classes: [Move]
}

type Movedamageclassdescription {
    description: String!
    id: ID!
    language_id: Integer
    move_damage_class_id: Integer
    language: Language
    movedamageclass_move_damage_class: Movedamageclas
}

type Movedamageclassname {
    id: ID!
    language_id: Integer
    move_damage_class_id: Integer
    name: String!
    language: Language
    movedamageclass_move_damage_class: Movedamageclas
}

type Moveeffect {
    id: ID!
    move_effect_movechanges: [Movechange]
    move_effect_moveeffectchanges: [Moveeffectchange]
    move_effect_moveeffecteffecttexts: [Moveeffecteffecttext]
    move_effects: [Move]
}

type Moveeffectchange {
    id: ID!
    move_effect_id: Integer
    version_group_id: Integer
    move_effect_change_moveeffectchangeeffecttexts: [Moveeffectchangeeffecttext]
    moveeffect_move_effect: Moveeffect
    versiongroup_version_group: Versiongroup
}

type Moveeffectchangeeffecttext {
    effect: String!
    id: ID!
    language_id: Integer
    move_effect_change_id: Integer
    language: Language
    moveeffectchange_move_effect_change: Moveeffectchange
}

type Moveeffecteffecttext {
    effect: String!
    id: ID!
    language_id: Integer
    move_effect_id: Integer
    short_effect: String!
    language: Language
    moveeffect_move_effect: Moveeffect
}

type Moveflavortext {
    flavor_text: String!
    id: ID!
    language_id: Integer
    move_id: Integer
    version_group_id: Integer
    language: Language
    move: Move
    versiongroup_version_group: Versiongroup
}

type Movelearnmethod {
    id: ID!
    name: String!
    move_learn_method_movelearnmethoddescriptions: [Movelearnmethoddescription]
    move_learn_method_movelearnmethodnames: [Movelearnmethodname]
    move_learn_method_pokemonmoves: [Pokemonmove]
    move_learn_method_versiongroupmovelearnmethods: [Versiongroupmovelearnmethod]
}

type Movelearnmethoddescription {
    description: String!
    id: ID!
    language_id: Integer
    move_learn_method_id: Integer
    language: Language
    movelearnmethod_move_learn_method: Movelearnmethod
}

type Movelearnmethodname {
    id: ID!
    language_id: Integer
    move_learn_method_id: Integer
    name: String!
    language: Language
    movelearnmethod_move_learn_method: Movelearnmethod
}

type Movemetum {
    ailment_chance: Integer
    crit_rate: Integer
    drain: Integer
    flinch_chance: Integer
    healing: Integer
    id: ID!
    max_hits: Integer
    max_turns: Integer
    min_hits: Integer
    min_turns: Integer
    move_id: Integer!
    move_meta_ailment_id: Integer
    move_meta_category_id: Integer
    stat_chance: Integer
    move: Move
    movemetaailment_move_meta_ailment: Movemetaailment
    movemetacategory_move_meta_category: Movemetacategory
}

type Movemetaailment {
    id: ID!
    name: String!
    move_meta_ailment_movemeta: [Movemetum]
    move_meta_ailment_movemetaailmentnames: [Movemetaailmentname]
}

type Movemetaailmentname {
    id: ID!
    language_id: Integer
    move_meta_ailment_id: Integer
    name: String!
    language: Language
    movemetaailment_move_meta_ailment: Movemetaailment
}

type Movemetacategory {
    id: ID!
    name: String!
    move_meta_category_movemeta: [Movemetum]
    move_meta_category_movemetacategorydescriptions: [Movemetacategorydescription]
}

type Movemetacategorydescription {
    description: String!
    id: ID!
    language_id: Integer
    move_meta_category_id: Integer
    language: Language
    movemetacategory_move_meta_category: Movemetacategory
}

type Movemetastatchange {
    change: Integer!
    id: ID!
    move_id: Integer
    stat_id: Integer
    move: Move
    stat: Stat
}

type Movename {
    id: ID!
    language_id: Integer
    move_id: Integer
    name: String!
    language: Language
    move: Move
}

type Movetarget {
    id: ID!
    name: String!
    move_target_movetargetdescriptions: [Movetargetdescription]
    move_target_movetargetnames: [Movetargetname]
    move_targets: [Move]
}

type Movetargetdescription {
    description: String!
    id: ID!
    language_id: Integer
    move_target_id: Integer
    language: Language
    movetarget_move_target: Movetarget
}

type Movetargetname {
    id: ID!
    language_id: Integer
    move_target_id: Integer
    name: String!
    language: Language
    movetarget_move_target: Movetarget
}

type Nature {
    decreased_stat_id: Integer
    game_index: Integer!
    hates_flavor_id: Integer
    id: ID!
    increased_stat_id: Integer
    likes_flavor_id: Integer
    name: String!
    berryflavor_hates_flavor: Berryflavor
    berryflavor_likes_flavor: Berryflavor
    nature_naturebattlestylepreferences: [Naturebattlestylepreference]
    nature_naturenames: [Naturename]
    nature_naturepokeathlonstats: [Naturepokeathlonstat]
    stat_decreased: Stat
    stat_increased: Stat
}

type Naturebattlestylepreference {
    high_hp_preference: Integer!
    id: ID!
    low_hp_preference: Integer!
    move_battle_style_id: Integer
    nature_id: Integer
    movebattlestyle_move_battle_style: Movebattlestyle
    nature: Nature
}

type Naturename {
    id: ID!
    language_id: Integer
    name: String!
    nature_id: Integer
    language: Language
    nature: Nature
}

type Naturepokeathlonstat {
    id: ID!
    max_change: Integer!
    nature_id: Integer
    pokeathlon_stat_id: Integer
    nature: Nature
    pokeathlonstat_pokeathlon_stat: Pokeathlonstat
}

type Palpark {
    base_score: Integer
    id: ID!
    pal_park_area_id: Integer
    pokemon_species_id: Integer
    rate: Integer!
    palparkarea_pal_park_area: Palparkarea
    pokemonspecy_pokemon_specy: Pokemonspecy
}

type Palparkarea {
    id: ID!
    name: String!
    pal_park_area_palparkareanames: [Palparkareaname]
    pal_park_area_palparks: [Palpark]
}

type Palparkareaname {
    id: ID!
    language_id: Integer
    name: String!
    pal_park_area_id: Integer
    language: Language
    palparkarea_pal_park_area: Palparkarea
}

type Pokeathlonstat {
    id: ID!
    name: String!
    pokeathlon_stat_naturepokeathlonstats: [Naturepokeathlonstat]
    pokeathlon_stat_pokeathlonstatnames: [Pokeathlonstatname]
}

type Pokeathlonstatname {
    id: ID!
    language_id: Integer
    name: String!
    pokeathlon_stat_id: Integer
    language: Language
    pokeathlonstat_pokeathlon_stat: Pokeathlonstat
}

type Pokedex {
    id: ID!
    is_main_series: bool!
    name: String!
    region_id: Integer
    pokedex_pokedexdescriptions: [Pokedexdescription]
    pokedex_pokedexnames: [Pokedexname]
    pokedex_pokedexversiongroups: [Pokedexversiongroup]
    pokedex_pokemondexnumbers: [Pokemondexnumber]
    region: Region
}

type Pokedexdescription {
    description: String!
    id: ID!
    language_id: Integer
    pokedex_id: Integer
    language: Language
    pokedex: Pokedex
}

type Pokedexname {
    id: ID!
    language_id: Integer
    name: String!
    pokedex_id: Integer
    language: Language
    pokedex: Pokedex
}

type Pokedexversiongroup {
    id: ID!
    pokedex_id: Integer
    version_group_id: Integer
    pokedex: Pokedex
    versiongroup_version_group: Versiongroup
}

type Pokemonability {
    ability_id: Integer
    id: ID!
    is_hidden: bool!
    pokemon_id: Integer
    slot: Integer!
    ability: Ability
    pokemon: Pokemon
}

type Pokemoncolor {
    id: ID!
    name: String!
    pokemon_color_pokemoncolornames: [Pokemoncolorname]
    pokemon_color_pokemonspecies: [Pokemonspecy]
}

type Pokemoncolorname {
    id: ID!
    language_id: Integer
    name: String!
    pokemon_color_id: Integer
    language: Language
    pokemoncolor_pokemon_color: Pokemoncolor
}

type Pokemondexnumber {
    id: ID!
    pokedex_id: Integer
    pokedex_number: Integer!
    pokemon_species_id: Integer
    pokedex: Pokedex
    pokemonspecy_pokemon_specy: Pokemonspecy
}

type Pokemonegggroup {
    egg_group_id: Integer
    id: ID!
    pokemon_species_id: Integer
    egggroup_egg_group: Egggroup
    pokemonspecy_pokemon_specy: Pokemonspecy
}

type Pokemonevolution {
    evolution_item_id: Integer
    evolution_trigger_id: Integer
    evolved_species_id: Integer
    gender_id: Integer
    held_item_id: Integer
    id: ID!
    known_move_id: Integer
    known_move_type_id: Integer
    location_id: Integer
    min_affection: Integer
    min_beauty: Integer
    min_happiness: Integer
    min_level: Integer
    needs_overworld_rain: bool!
    party_species_id: Integer
    party_type_id: Integer
    relative_physical_stats: Integer
    time_of_day: String
    trade_species_id: Integer
    turn_upside_down: bool!
    evolutiontrigger_evolution_trigger: Evolutiontrigger
    gender: Gender
    item_evolution: Item
    item_held: Item
    location: Location
    move_known: Move
    pokemonspecy_evolved_specy: Pokemonspecy
    pokemonspecy_party_specy: Pokemonspecy
    pokemonspecy_trade_specy: Pokemonspecy
    type_known_move: Type
    type_party: Type
}

type Pokemonform {
    form_name: String!
    form_order: Integer
    id: ID!
    is_battle_only: bool!
    is_default: bool!
    is_mega: bool!
    name: String!
    order: Integer
    pokemon_id: Integer
    version_group_id: Integer
    pokemon: Pokemon
    pokemon_form_pokemonformgenerations: [Pokemonformgeneration]
    pokemon_form_pokemonformnames: [Pokemonformname]
    pokemon_form_pokemonformsprites: [Pokemonformsprite]
    versiongroup_version_group: Versiongroup
}

type Pokemonformgeneration {
    game_index: Integer!
    generation_id: Integer
    id: ID!
    pokemon_form_id: Integer
    generation: Generation
    pokemonform_pokemon_form: Pokemonform
}

type Pokemonformname {
    id: ID!
    language_id: Integer
    name: String!
    pokemon_form_id: Integer
    pokemon_name: String!
    language: Language
    pokemonform_pokemon_form: Pokemonform
}

type Pokemonformsprite {
    id: ID!
    pokemon_form_id: Integer
    sprites: String!
    pokemonform_pokemon_form: Pokemonform
}

type Pokemongameindex {
    game_index: Integer!
    id: ID!
    pokemon_id: Integer
    version_id: Integer
    pokemon: Pokemon
    version: Version
}

type Pokemonhabitat {
    id: ID!
    name: String!
    pokemon_habitat_pokemonhabitatnames: [Pokemonhabitatname]
    pokemon_habitat_pokemonspecies: [Pokemonspecy]
}

type Pokemonhabitatname {
    id: ID!
    language_id: Integer
    name: String!
    pokemon_habitat_id: Integer
    language: Language
    pokemonhabitat_pokemon_habitat: Pokemonhabitat
}

type Pokemonitem {
    id: ID!
    item_id: Integer
    pokemon_id: Integer
    rarity: Integer!
    version_id: Integer
    item: Item
    pokemon: Pokemon
    version: Version
}

type Pokemonmove {
    id: ID!
    level: Integer!
    move_id: Integer
    move_learn_method_id: Integer
    order: Integer
    pokemon_id: Integer
    version_group_id: Integer
    move: Move
    movelearnmethod_move_learn_method: Movelearnmethod
    pokemon: Pokemon
    versiongroup_version_group: Versiongroup
}

type Pokemonshape {
    id: ID!
    name: String!
    pokemon_shape_pokemonshapenames: [Pokemonshapename]
    pokemon_shape_pokemonspecies: [Pokemonspecy]
}

type Pokemonshapename {
    awesome_name: String!
    id: ID!
    language_id: Integer
    name: String!
    pokemon_shape_id: Integer
    language: Language
    pokemonshape_pokemon_shape: Pokemonshape
}

type Pokemonspecy {
    base_happiness: Integer!
    capture_rate: Integer!
    evolution_chain_id: Integer
    evolves_from_species_id: Integer
    forms_switchable: bool!
    gender_rate: Integer!
    generation_id: Integer
    growth_rate_id: Integer
    has_gender_differences: bool!
    hatch_counter: Integer!
    id: ID!
    is_baby: bool!
    name: String!
    order: Integer
    pokemon_color_id: Integer
    pokemon_habitat_id: Integer
    pokemon_shape_id: Integer
    evolutionchain_evolution_chain: Evolutionchain
    evolved_specy_pokemonevolutions: [Pokemonevolution]
    evolves_from_specy_pokemonspecies: [Pokemonspecy]
    generation: Generation
    growthrate_growth_rate: Growthrate
    party_specy_pokemonevolutions: [Pokemonevolution]
    pokemon_species: [Pokemon]
    pokemon_specy_palparks: [Palpark]
    pokemon_specy_pokemondexnumbers: [Pokemondexnumber]
    pokemon_specy_pokemonegggroups: [Pokemonegggroup]
    pokemon_specy_pokemonspeciesdescriptions: [Pokemonspeciesdescription]
    pokemon_specy_pokemonspeciesflavortexts: [Pokemonspeciesflavortext]
    pokemon_specy_pokemonspeciesnames: [Pokemonspeciesname]
    pokemoncolor_pokemon_color: Pokemoncolor
    pokemonhabitat_pokemon_habitat: Pokemonhabitat
    pokemonshape_pokemon_shape: Pokemonshape
    pokemonspecy_evolves_from_specy: Pokemonspecy
    trade_specy_pokemonevolutions: [Pokemonevolution]
}

type Pokemonspeciesdescription {
    description: String!
    id: ID!
    language_id: Integer
    pokemon_species_id: Integer
    language: Language
    pokemonspecy_pokemon_specy: Pokemonspecy
}

type Pokemonspeciesflavortext {
    flavor_text: String!
    id: ID!
    language_id: Integer
    pokemon_species_id: Integer
    version_id: Integer
    language: Language
    pokemonspecy_pokemon_specy: Pokemonspecy
    version: Version
}

type Pokemonspeciesname {
    genus: String!
    id: ID!
    language_id: Integer
    name: String!
    pokemon_species_id: Integer
    language: Language
    pokemonspecy_pokemon_specy: Pokemonspecy
}

type Pokemonsprite {
    id: ID!
    pokemon_id: Integer
    sprites: String!
    pokemon: Pokemon
}

type Pokemonstat {
    base_stat: Integer!
    effort: Integer!
    id: ID!
    pokemon_id: Integer
    stat_id: Integer
    pokemon: Pokemon
    stat: Stat
}

type Pokemontype {
    id: ID!
    pokemon_id: Integer
    slot: Integer!
    type_id: Integer
    pokemon: Pokemon
    type: Type
}

type Region {
    id: ID!
    name: String!
    region_generations: [Generation]
    region_locations: [Location]
    region_pokedexes: [Pokedex]
    region_regionnames: [Regionname]
    region_versiongroupregions: [Versiongroupregion]
}

type Regionname {
    id: ID!
    language_id: Integer
    name: String!
    region_id: Integer
    language: Language
    region: Region
}

type Stat {
    game_index: Integer!
    id: ID!
    is_battle_only: bool!
    move_damage_class_id: Integer
    name: String!
    decreased_stat_natures: [Nature]
    increased_stat_natures: [Nature]
    movedamageclass_move_damage_class: Movedamageclas
    stat_characteristics: [Characteristic]
    stat_movemetastatchanges: [Movemetastatchange]
    stat_pokemonstats: [Pokemonstat]
    stat_statnames: [Statname]
}

type Statname {
    id: ID!
    language_id: Integer
    name: String!
    stat_id: Integer
    language: Language
    stat: Stat
}

type Supercontestcombo {
    first_move_id: Integer
    id: ID!
    second_move_id: Integer
    move_first: Move
    move_second: Move
}

type Supercontesteffect {
    appeal: Integer!
    id: ID!
    super_contest_effect_moves: [Move]
    super_contest_effect_supercontesteffectflavortexts: [Supercontesteffectflavortext]
}

type Supercontesteffectflavortext {
    flavor_text: String!
    id: ID!
    language_id: Integer
    super_contest_effect_id: Integer
    language: Language
    supercontesteffect_super_contest_effect: Supercontesteffect
}

type Type {
    generation_id: Integer
    id: ID!
    move_damage_class_id: Integer
    name: String!
    damage_type_typeefficacies: [Typeefficacy]
    generation: Generation
    known_move_type_pokemonevolutions: [Pokemonevolution]
    movedamageclass_move_damage_class: Movedamageclas
    natural_gift_type_berries: [Berry]
    party_type_pokemonevolutions: [Pokemonevolution]
    target_type_typeefficacies: [Typeefficacy]
    type_movechanges: [Movechange]
    type_moves: [Move]
    type_pokemontypes: [Pokemontype]
    type_typegameindices: [Typegameindex]
    type_typenames: [Typename]
}

type Typeefficacy {
    damage_factor: Integer!
    damage_type_id: Integer
    id: ID!
    target_type_id: Integer
    type_damage: Type
    type_target: Type
}

type Typegameindex {
    game_index: Integer!
    generation_id: Integer
    id: ID!
    type_id: Integer
    generation: Generation
    type: Type
}

type Typename {
    id: ID!
    language_id: Integer
    name: String!
    type_id: Integer
    language: Language
    type: Type
}

type Version {
    id: ID!
    name: String!
    version_group_id: Integer
    version_encounters: [Encounter]
    version_locationareaencounterrates: [Locationareaencounterrate]
    version_pokemongameindices: [Pokemongameindex]
    version_pokemonitems: [Pokemonitem]
    version_pokemonspeciesflavortexts: [Pokemonspeciesflavortext]
    version_versionnames: [Versionname]
    versiongroup_version_group: Versiongroup
}

type Versiongroup {
    generation_id: Integer
    id: ID!
    name: String!
    order: Integer
    generation: Generation
    version_group_abilitychanges: [Abilitychange]
    version_group_abilityflavortexts: [Abilityflavortext]
    version_group_encounterslots: [Encounterslot]
    version_group_itemflavortexts: [Itemflavortext]
    version_group_machines: [Machine]
    version_group_movechanges: [Movechange]
    version_group_moveeffectchanges: [Moveeffectchange]
    version_group_moveflavortexts: [Moveflavortext]
    version_group_pokedexversiongroups: [Pokedexversiongroup]
    version_group_pokemonforms: [Pokemonform]
    version_group_pokemonmoves: [Pokemonmove]
    version_group_versiongroupmovelearnmethods: [Versiongroupmovelearnmethod]
    version_group_versiongroupregions: [Versiongroupregion]
    version_groups: [Version]
}

type Versiongroupmovelearnmethod {
    id: ID!
    move_learn_method_id: Integer
    version_group_id: Integer
    movelearnmethod_move_learn_method: Movelearnmethod
    versiongroup_version_group: Versiongroup
}

type Versiongroupregion {
    id: ID!
    region_id: Integer
    version_group_id: Integer
    region: Region
    versiongroup_version_group: Versiongroup
}

type Versionname {
    id: ID!
    language_id: Integer
    name: String!
    version_id: Integer
    language: Language
    version: Version
}

type TastypieApiacces {
    accessed: Integer!
    id: ID!
    identifier: String!
    request_method: String!
    url: String!
}

type TastypieApikey {
    created: datetime!
    id: ID!
    key: String!
    user_id: Integer!
    auth_user: AuthUser
}
