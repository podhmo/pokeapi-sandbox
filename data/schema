type AlertsAlert {
    active: bool!
    id: ID!
    message: String!
}

type AuthGroup {
    auth_group_permissions: [AuthGroupPermission]
    auth_user_groups: [AuthUserGroup]
    id: ID!
    name: String!
}

type AuthGroupPermission {
    auth_group: AuthGroup
    auth_permission: AuthPermission
    group_id: Integer!
    id: ID!
    permission_id: Integer!
}

type AuthPermission {
    auth_group_permissions: [AuthGroupPermission]
    auth_user_permissions: [AuthUserPermission]
    codename: String!
    content_type_id: Integer!
    django_content_type: DjangoContentType
    id: ID!
    name: String!
}

type AuthUser {
    auth_user_groups: [AuthUserGroup]
    auth_user_permissions: [AuthUserPermission]
    date_joined: datetime!
    django_admin_log_users: [DjangoAdminLog]
    email: String!
    first_name: String!
    id: ID!
    is_active: bool!
    is_staff: bool!
    is_superuser: bool!
    last_login: datetime
    last_name: String!
    password: String!
    tastypie_apikey_users: [TastypieApikey]
    username: String!
}

type AuthUserGroup {
    auth_group: AuthGroup
    auth_user: AuthUser
    group_id: Integer!
    id: ID!
    user_id: Integer!
}

type AuthUserPermission {
    auth_permission: AuthPermission
    auth_user: AuthUser
    id: ID!
    permission_id: Integer!
    user_id: Integer!
}

type CorsheadersCorsmodel {
    cors: String!
    id: ID!
}

type DjangoAdminLog {
    action_flag: Integer!
    action_time: datetime!
    auth_user: AuthUser
    change_message: String!
    content_type_id: Integer
    django_content_type: DjangoContentType
    id: ID!
    object_id: String
    object_repr: String!
    user_id: Integer!
}

type DjangoContentType {
    app_label: String!
    auth_permission_content_types: [AuthPermission]
    django_admin_log_content_types: [DjangoAdminLog]
    id: ID!
    model: String!
}

type DjangoMigration {
    app: String!
    applied: datetime!
    id: ID!
    name: String!
}

type DjangoSession {
    expire_date: datetime!
    session_data: String!
    session_key: ID!
}

type DjangoSite {
    domain: String!
    id: ID!
    name: String!
}

type HitsResourceview {
    count: Integer!
    date: date!
    id: ID!
    version: Integer!
}

type PokemonAbility {
    ability_id: Integer!
    id: ID!
    pokemon: Pokemon
    pokemon_ability: PokemonAbility
    pokemon_id: Integer!
}

type PokemonDescription {
    description_id: Integer!
    id: ID!
    pokemon: Pokemon
    pokemon_description: PokemonDescription
    pokemon_id: Integer!
}

type PokemonDescriptionGame {
    description_id: Integer!
    game_id: Integer!
    id: ID!
    pokemon_description: PokemonDescription
    pokemon_game: PokemonGame
}

type PokemonEgggroup {
    created: datetime!
    id: ID!
    modified: datetime!
    name: String!
    pokemon_egg_group_egggroups: [PokemonEggGroup]
}

type PokemonEvolution {
    created: datetime!
    detail: String
    frm_id: Integer
    id: ID!
    level: Integer!
    method: String!
    modified: datetime!
    pokemon_frm: Pokemon
    pokemon_to: Pokemon
    to_id: Integer
}

type PokemonGame {
    created: datetime!
    generation: Integer!
    id: ID!
    modified: datetime!
    name: String!
    pokemon_description_games: [PokemonDescriptionGame]
    release_year: Integer!
}

type PokemonMove {
    accuracy: Integer!
    category: String!
    created: datetime!
    description: String!
    id: ID!
    modified: datetime!
    name: String!
    pokemon_move_etypes: [PokemonMoveEtype]
    pokemon_movepokemon_moves: [PokemonMovepokemon]
    power: Integer!
    pp: Integer!
}

type PokemonMoveEtype {
    id: ID!
    move_id: Integer!
    pokemon_move: PokemonMove
    pokemon_type: PokemonType
    type_id: Integer!
}

type PokemonMovepokemon {
    created: datetime!
    id: ID!
    learn_type: String!
    level: Integer
    modified: datetime!
    move_id: Integer
    pokemon: Pokemon
    pokemon_id: Integer
    pokemon_move: PokemonMove
}

type PokemonPokedex {
    created: datetime!
    id: ID!
    modified: datetime!
    name: String!
}

type Pokemon {
    base_experience: Integer!
    encounter_pokemons: [Encounter]
    height: Integer!
    id: ID!
    is_default: bool!
    name: String!
    order: Integer
    pokemon_species_id: Integer
    pokemonability_pokemons: [Pokemonability]
    pokemonform_pokemons: [Pokemonform]
    pokemongameindex_pokemons: [Pokemongameindex]
    pokemonitem_pokemons: [Pokemonitem]
    pokemonmove_pokemons: [Pokemonmove]
    pokemonspecy_pokemon_specy: Pokemonspecy
    pokemonsprite_pokemons: [Pokemonsprite]
    pokemonstat_pokemons: [Pokemonstat]
    pokemontype_pokemons: [Pokemontype]
    weight: Integer!
}

type PokemonEggGroup {
    egggroup_id: Integer!
    id: ID!
    pokemon: Pokemon
    pokemon_egggroup: PokemonEgggroup
    pokemon_id: Integer!
}

type PokemonSprite {
    created: datetime!
    id: ID!
    image: String!
    modified: datetime!
    name: String!
    pokemon_sprites: [PokemonSprite]
}

type PokemonType {
    created: datetime!
    id: ID!
    modified: datetime!
    name: String!
    pokemon_move_etype_types: [PokemonMoveEtype]
    pokemon_typechart_frms: [PokemonTypechart]
    pokemon_typechart_tos: [PokemonTypechart]
    pokemon_types: [PokemonType]
}

type PokemonTypechart {
    created: datetime!
    frm_id: Integer
    id: ID!
    modified: datetime!
    pokemon_type_frm: PokemonType
    pokemon_type_to: PokemonType
    to_id: Integer
    ttype: String
}

type Ability {
    abilitychange_abilities: [Abilitychange]
    abilityeffecttext_abilities: [Abilityeffecttext]
    abilityflavortext_abilities: [Abilityflavortext]
    abilityname_abilities: [Abilityname]
    generation: Generation
    generation_id: Integer
    id: ID!
    is_main_series: bool!
    name: String!
    pokemonability_abilities: [Pokemonability]
}

type Abilitychange {
    ability: Ability
    ability_id: Integer
    abilitychangeeffecttext_ability_changes: [Abilitychangeeffecttext]
    id: ID!
    version_group_id: Integer
    versiongroup_version_group: Versiongroup
}

type Abilitychangeeffecttext {
    ability_change_id: Integer
    abilitychange_ability_change: Abilitychange
    effect: String!
    id: ID!
    language: Language
    language_id: Integer
}

type Abilityeffecttext {
    ability: Ability
    ability_id: Integer
    effect: String!
    id: ID!
    language: Language
    language_id: Integer
    short_effect: String!
}

type Abilityflavortext {
    ability: Ability
    ability_id: Integer
    flavor_text: String!
    id: ID!
    language: Language
    language_id: Integer
    version_group_id: Integer
    versiongroup_version_group: Versiongroup
}

type Abilityname {
    ability: Ability
    ability_id: Integer
    id: ID!
    language: Language
    language_id: Integer
    name: String!
}

type Berry {
    berry_firmness_id: Integer
    berryfirmness_berry_firmness: Berryfirmnes
    berryflavormap_berries: [Berryflavormap]
    growth_time: Integer!
    id: ID!
    item: Item
    item_id: Integer
    max_harvest: Integer!
    name: String!
    natural_gift_power: Integer!
    natural_gift_type_id: Integer
    size: Integer!
    smoothness: Integer!
    soil_dryness: Integer!
    type_natural_gift: Type
}

type Berryfirmnes {
    berry_firmnesses: [Berry]
    berryfirmnessname_berry_firmnesses: [Berryfirmnessname]
    id: ID!
    name: String!
}

type Berryfirmnessname {
    berry_firmness_id: Integer
    berryfirmness_berry_firmness: Berryfirmnes
    id: ID!
    language: Language
    language_id: Integer
    name: String!
}

type Berryflavor {
    berryflavormap_berry_flavors: [Berryflavormap]
    berryflavorname_berry_flavors: [Berryflavorname]
    contest_type_id: Integer
    contesttype_contest_type: Contesttype
    id: ID!
    name: String!
    nature_hates_flavors: [Nature]
    nature_likes_flavors: [Nature]
}

type Berryflavormap {
    berry: Berry
    berry_flavor_id: Integer
    berry_id: Integer
    berryflavor_berry_flavor: Berryflavor
    id: ID!
    potency: Integer!
}

type Berryflavorname {
    berry_flavor_id: Integer
    berryflavor_berry_flavor: Berryflavor
    id: ID!
    language: Language
    language_id: Integer
    name: String!
}

type Characteristic {
    characteristicdescription_characteristics: [Characteristicdescription]
    gene_mod_5: Integer!
    id: ID!
    stat: Stat
    stat_id: Integer
}

type Characteristicdescription {
    characteristic: Characteristic
    characteristic_id: Integer
    description: String!
    id: ID!
    language: Language
    language_id: Integer
}

type Contestcombo {
    first_move_id: Integer
    id: ID!
    move_first: Move
    move_second: Move
    second_move_id: Integer
}

type Contesteffect {
    appeal: Integer!
    contesteffecteffecttext_contest_effects: [Contesteffecteffecttext]
    contesteffectflavortext_contest_effects: [Contesteffectflavortext]
    id: ID!
    jam: Integer!
    move_contest_effects: [Move]
}

type Contesteffecteffecttext {
    contest_effect_id: Integer
    contesteffect_contest_effect: Contesteffect
    effect: String!
    id: ID!
    language: Language
    language_id: Integer
}

type Contesteffectflavortext {
    contest_effect_id: Integer
    contesteffect_contest_effect: Contesteffect
    flavor_text: String!
    id: ID!
    language: Language
    language_id: Integer
}

type Contesttype {
    berryflavor_contest_types: [Berryflavor]
    contesttypename_contest_types: [Contesttypename]
    id: ID!
    move_contest_types: [Move]
    name: String!
}

type Contesttypename {
    color: String!
    contest_type_id: Integer
    contesttype_contest_type: Contesttype
    flavor: String!
    id: ID!
    language: Language
    language_id: Integer
    name: String!
}

type Egggroup {
    egggroupname_egg_groups: [Egggroupname]
    id: ID!
    name: String!
    pokemonegggroup_egg_groups: [Pokemonegggroup]
}

type Egggroupname {
    egg_group_id: Integer
    egggroup_egg_group: Egggroup
    id: ID!
    language: Language
    language_id: Integer
    name: String!
}

type Encounter {
    encounter_slot_id: Integer
    encounterconditionvaluemap_encounters: [Encounterconditionvaluemap]
    encounterslot_encounter_slot: Encounterslot
    id: ID!
    location_area_id: Integer
    locationarea_location_area: Locationarea
    max_level: Integer!
    min_level: Integer!
    pokemon: Pokemon
    pokemon_id: Integer
    version: Version
    version_id: Integer
}

type Encountercondition {
    encounterconditionname_encounter_conditions: [Encounterconditionname]
    encounterconditionvalue_encounter_conditions: [Encounterconditionvalue]
    id: ID!
    name: String!
}

type Encounterconditionname {
    encounter_condition_id: Integer
    encountercondition_encounter_condition: Encountercondition
    id: ID!
    language: Language
    language_id: Integer
    name: String!
}

type Encounterconditionvalue {
    encounter_condition_id: Integer
    encountercondition_encounter_condition: Encountercondition
    encounterconditionvaluemap_encounter_condition_values: [Encounterconditionvaluemap]
    encounterconditionvaluename_encounter_condition_values: [Encounterconditionvaluename]
    id: ID!
    is_default: bool!
    name: String!
}

type Encounterconditionvaluemap {
    encounter: Encounter
    encounter_condition_value_id: Integer
    encounter_id: Integer
    encounterconditionvalue_encounter_condition_value: Encounterconditionvalue
    id: ID!
}

type Encounterconditionvaluename {
    encounter_condition_value_id: Integer
    encounterconditionvalue_encounter_condition_value: Encounterconditionvalue
    id: ID!
    language: Language
    language_id: Integer
    name: String!
}

type Encountermethod {
    encountermethodname_encounter_methods: [Encountermethodname]
    encounterslot_encounter_methods: [Encounterslot]
    id: ID!
    locationareaencounterrate_encounter_methods: [Locationareaencounterrate]
    name: String!
    order: Integer
}

type Encountermethodname {
    encounter_method_id: Integer
    encountermethod_encounter_method: Encountermethod
    id: ID!
    language: Language
    language_id: Integer
    name: String!
}

type Encounterslot {
    encounter_method_id: Integer
    encounter_slots: [Encounter]
    encountermethod_encounter_method: Encountermethod
    id: ID!
    rarity: Integer!
    slot: Integer
    version_group_id: Integer
    versiongroup_version_group: Versiongroup
}

type Evolutionchain {
    baby_trigger_item_id: Integer
    id: ID!
    item_baby_trigger: Item
    pokemonspecy_evolution_chains: [Pokemonspecy]
}

type Evolutiontrigger {
    evolutiontriggername_evolution_triggers: [Evolutiontriggername]
    id: ID!
    name: String!
    pokemonevolution_evolution_triggers: [Pokemonevolution]
}

type Evolutiontriggername {
    evolution_trigger_id: Integer
    evolutiontrigger_evolution_trigger: Evolutiontrigger
    id: ID!
    language: Language
    language_id: Integer
    name: String!
}

type Experience {
    experience: Integer!
    growth_rate_id: Integer
    growthrate_growth_rate: Growthrate
    id: ID!
    level: Integer!
}

type Gender {
    id: ID!
    name: String!
    pokemonevolution_genders: [Pokemonevolution]
}

type Generation {
    ability_generations: [Ability]
    generationname_generations: [Generationname]
    id: ID!
    itemgameindex_generations: [Itemgameindex]
    locationgameindex_generations: [Locationgameindex]
    move_generations: [Move]
    name: String!
    pokemonformgeneration_generations: [Pokemonformgeneration]
    pokemonspecy_generations: [Pokemonspecy]
    region: Region
    region_id: Integer
    type_generations: [Type]
    typegameindex_generations: [Typegameindex]
    versiongroup_generations: [Versiongroup]
}

type Generationname {
    generation: Generation
    generation_id: Integer
    id: ID!
    language: Language
    language_id: Integer
    name: String!
}

type Growthrate {
    experience_growth_rates: [Experience]
    formula: String!
    growthratedescription_growth_rates: [Growthratedescription]
    id: ID!
    machine_growth_rates: [Machine]
    name: String!
    pokemonspecy_growth_rates: [Pokemonspecy]
}

type Growthratedescription {
    description: String!
    growth_rate_id: Integer
    growthrate_growth_rate: Growthrate
    id: ID!
    language: Language
    language_id: Integer
}

type Item {
    berry_items: [Berry]
    cost: Integer
    evolutionchain_baby_trigger_items: [Evolutionchain]
    fling_power: Integer
    id: ID!
    item_category_id: Integer
    item_fling_effect_id: Integer
    itemattributemap_items: [Itemattributemap]
    itemcategory_item_category: Itemcategory
    itemeffecttext_items: [Itemeffecttext]
    itemflavortext_items: [Itemflavortext]
    itemflingeffect_item_fling_effect: Itemflingeffect
    itemgameindex_items: [Itemgameindex]
    itemname_items: [Itemname]
    itemsprite_items: [Itemsprite]
    machine_items: [Machine]
    name: String!
    pokemonevolution_evolution_items: [Pokemonevolution]
    pokemonevolution_held_items: [Pokemonevolution]
    pokemonitem_items: [Pokemonitem]
}

type Itemattribute {
    id: ID!
    itemattributedescription_item_attributes: [Itemattributedescription]
    itemattributemap_item_attributes: [Itemattributemap]
    itemattributename_item_attributes: [Itemattributename]
    name: String!
}

type Itemattributedescription {
    description: String!
    id: ID!
    item_attribute_id: Integer
    itemattribute_item_attribute: Itemattribute
    language: Language
    language_id: Integer
}

type Itemattributemap {
    id: ID!
    item: Item
    item_attribute_id: Integer
    item_id: Integer
    itemattribute_item_attribute: Itemattribute
}

type Itemattributename {
    id: ID!
    item_attribute_id: Integer
    itemattribute_item_attribute: Itemattribute
    language: Language
    language_id: Integer
    name: String!
}

type Itemcategory {
    id: ID!
    item_categories: [Item]
    item_pocket_id: Integer
    itemcategoryname_item_categories: [Itemcategoryname]
    itempocket_item_pocket: Itempocket
    name: String!
}

type Itemcategoryname {
    id: ID!
    item_category_id: Integer
    itemcategory_item_category: Itemcategory
    language: Language
    language_id: Integer
    name: String!
}

type Itemeffecttext {
    effect: String!
    id: ID!
    item: Item
    item_id: Integer
    language: Language
    language_id: Integer
    short_effect: String!
}

type Itemflavortext {
    flavor_text: String!
    id: ID!
    item: Item
    item_id: Integer
    language: Language
    language_id: Integer
    version_group_id: Integer
    versiongroup_version_group: Versiongroup
}

type Itemflingeffect {
    id: ID!
    item_fling_effects: [Item]
    itemflingeffecteffecttext_item_fling_effects: [Itemflingeffecteffecttext]
    name: String!
}

type Itemflingeffecteffecttext {
    effect: String!
    id: ID!
    item_fling_effect_id: Integer
    itemflingeffect_item_fling_effect: Itemflingeffect
    language: Language
    language_id: Integer
}

type Itemgameindex {
    game_index: Integer!
    generation: Generation
    generation_id: Integer
    id: ID!
    item: Item
    item_id: Integer
}

type Itemname {
    id: ID!
    item: Item
    item_id: Integer
    language: Language
    language_id: Integer
    name: String!
}

type Itempocket {
    id: ID!
    itemcategory_item_pockets: [Itemcategory]
    itempocketname_item_pockets: [Itempocketname]
    name: String!
}

type Itempocketname {
    id: ID!
    item_pocket_id: Integer
    itempocket_item_pocket: Itempocket
    language: Language
    language_id: Integer
    name: String!
}

type Itemsprite {
    id: ID!
    item: Item
    item_id: Integer
    sprites: String!
}

type Language {
    abilitychangeeffecttext_languages: [Abilitychangeeffecttext]
    abilityeffecttext_languages: [Abilityeffecttext]
    abilityflavortext_languages: [Abilityflavortext]
    abilityname_languages: [Abilityname]
    berryfirmnessname_languages: [Berryfirmnessname]
    berryflavorname_languages: [Berryflavorname]
    characteristicdescription_languages: [Characteristicdescription]
    contesteffecteffecttext_languages: [Contesteffecteffecttext]
    contesteffectflavortext_languages: [Contesteffectflavortext]
    contesttypename_languages: [Contesttypename]
    egggroupname_languages: [Egggroupname]
    encounterconditionname_languages: [Encounterconditionname]
    encounterconditionvaluename_languages: [Encounterconditionvaluename]
    encountermethodname_languages: [Encountermethodname]
    evolutiontriggername_languages: [Evolutiontriggername]
    generationname_languages: [Generationname]
    growthratedescription_languages: [Growthratedescription]
    id: ID!
    iso3166: String!
    iso639: String!
    itemattributedescription_languages: [Itemattributedescription]
    itemattributename_languages: [Itemattributename]
    itemcategoryname_languages: [Itemcategoryname]
    itemeffecttext_languages: [Itemeffecttext]
    itemflavortext_languages: [Itemflavortext]
    itemflingeffecteffecttext_languages: [Itemflingeffecteffecttext]
    itemname_languages: [Itemname]
    itempocketname_languages: [Itempocketname]
    languagename_languages: [Languagename]
    languagename_local_languages: [Languagename]
    locationareaname_languages: [Locationareaname]
    locationname_languages: [Locationname]
    moveattributedescription_languages: [Moveattributedescription]
    moveattributename_languages: [Moveattributename]
    movebattlestylename_languages: [Movebattlestylename]
    movedamageclassdescription_languages: [Movedamageclassdescription]
    movedamageclassname_languages: [Movedamageclassname]
    moveeffectchangeeffecttext_languages: [Moveeffectchangeeffecttext]
    moveeffecteffecttext_languages: [Moveeffecteffecttext]
    moveflavortext_languages: [Moveflavortext]
    movelearnmethoddescription_languages: [Movelearnmethoddescription]
    movelearnmethodname_languages: [Movelearnmethodname]
    movemetaailmentname_languages: [Movemetaailmentname]
    movemetacategorydescription_languages: [Movemetacategorydescription]
    movename_languages: [Movename]
    movetargetdescription_languages: [Movetargetdescription]
    movetargetname_languages: [Movetargetname]
    name: String!
    naturename_languages: [Naturename]
    official: bool!
    order: Integer
    palparkareaname_languages: [Palparkareaname]
    pokeathlonstatname_languages: [Pokeathlonstatname]
    pokedexdescription_languages: [Pokedexdescription]
    pokedexname_languages: [Pokedexname]
    pokemoncolorname_languages: [Pokemoncolorname]
    pokemonformname_languages: [Pokemonformname]
    pokemonhabitatname_languages: [Pokemonhabitatname]
    pokemonshapename_languages: [Pokemonshapename]
    pokemonspeciesdescription_languages: [Pokemonspeciesdescription]
    pokemonspeciesflavortext_languages: [Pokemonspeciesflavortext]
    pokemonspeciesname_languages: [Pokemonspeciesname]
    regionname_languages: [Regionname]
    statname_languages: [Statname]
    supercontesteffectflavortext_languages: [Supercontesteffectflavortext]
    typename_languages: [Typename]
    versionname_languages: [Versionname]
}

type Languagename {
    id: ID!
    language: Language
    language_id: Integer
    language_local: Language
    local_language_id: Integer
    name: String!
}

type Location {
    id: ID!
    locationarea_locations: [Locationarea]
    locationgameindex_locations: [Locationgameindex]
    locationname_locations: [Locationname]
    name: String!
    pokemonevolution_locations: [Pokemonevolution]
    region: Region
    region_id: Integer
}

type Locationarea {
    encounter_location_areas: [Encounter]
    game_index: Integer!
    id: ID!
    location: Location
    location_id: Integer
    locationareaencounterrate_location_areas: [Locationareaencounterrate]
    locationareaname_location_areas: [Locationareaname]
    name: String!
}

type Locationareaencounterrate {
    encounter_method_id: Integer
    encountermethod_encounter_method: Encountermethod
    id: ID!
    location_area_id: Integer
    locationarea_location_area: Locationarea
    rate: Integer!
    version: Version
    version_id: Integer
}

type Locationareaname {
    id: ID!
    language: Language
    language_id: Integer
    location_area_id: Integer
    locationarea_location_area: Locationarea
    name: String!
}

type Locationgameindex {
    game_index: Integer!
    generation: Generation
    generation_id: Integer
    id: ID!
    location: Location
    location_id: Integer
}

type Locationname {
    id: ID!
    language: Language
    language_id: Integer
    location: Location
    location_id: Integer
    name: String!
}

type Machine {
    growth_rate_id: Integer
    growthrate_growth_rate: Growthrate
    id: ID!
    item: Item
    item_id: Integer
    machine_number: Integer!
    move: Move
    move_id: Integer
    version_group_id: Integer
    versiongroup_version_group: Versiongroup
}

type Move {
    accuracy: Integer
    contest_effect_id: Integer
    contest_type_id: Integer
    contestcombo_first_moves: [Contestcombo]
    contestcombo_second_moves: [Contestcombo]
    contesteffect_contest_effect: Contesteffect
    contesttype_contest_type: Contesttype
    generation: Generation
    generation_id: Integer
    id: ID!
    machine_moves: [Machine]
    move_damage_class_id: Integer
    move_effect_chance: Integer
    move_effect_id: Integer
    move_target_id: Integer
    moveattributemap_moves: [Moveattributemap]
    movechange_moves: [Movechange]
    movedamageclass_move_damage_class: Movedamageclas
    moveeffect_move_effect: Moveeffect
    moveflavortext_moves: [Moveflavortext]
    movemetastatchange_moves: [Movemetastatchange]
    movemetum_moves: [Movemetum]
    movename_moves: [Movename]
    movetarget_move_target: Movetarget
    name: String!
    pokemonevolution_known_moves: [Pokemonevolution]
    pokemonmove_moves: [Pokemonmove]
    power: Integer
    pp: Integer
    priority: Integer
    super_contest_effect_id: Integer
    supercontestcombo_first_moves: [Supercontestcombo]
    supercontestcombo_second_moves: [Supercontestcombo]
    supercontesteffect_super_contest_effect: Supercontesteffect
    type: Type
    type_id: Integer
}

type Moveattribute {
    id: ID!
    moveattributedescription_move_attributes: [Moveattributedescription]
    moveattributemap_move_attributes: [Moveattributemap]
    moveattributename_move_attributes: [Moveattributename]
    name: String!
}

type Moveattributedescription {
    description: String!
    id: ID!
    language: Language
    language_id: Integer
    move_attribute_id: Integer
    moveattribute_move_attribute: Moveattribute
}

type Moveattributemap {
    id: ID!
    move: Move
    move_attribute_id: Integer
    move_id: Integer
    moveattribute_move_attribute: Moveattribute
}

type Moveattributename {
    id: ID!
    language: Language
    language_id: Integer
    move_attribute_id: Integer
    moveattribute_move_attribute: Moveattribute
    name: String!
}

type Movebattlestyle {
    id: ID!
    movebattlestylename_move_battle_styles: [Movebattlestylename]
    name: String!
    naturebattlestylepreference_move_battle_styles: [Naturebattlestylepreference]
}

type Movebattlestylename {
    id: ID!
    language: Language
    language_id: Integer
    move_battle_style_id: Integer
    movebattlestyle_move_battle_style: Movebattlestyle
    name: String!
}

type Movechange {
    accuracy: Integer
    id: ID!
    move: Move
    move_effect_chance: Integer
    move_effect_id: Integer
    move_id: Integer
    moveeffect_move_effect: Moveeffect
    power: Integer
    pp: Integer
    type: Type
    type_id: Integer
    version_group_id: Integer
    versiongroup_version_group: Versiongroup
}

type Movedamageclas {
    id: ID!
    move_damage_classes: [Move]
    movedamageclassdescription_move_damage_classes: [Movedamageclassdescription]
    movedamageclassname_move_damage_classes: [Movedamageclassname]
    name: String!
    stat_move_damage_classes: [Stat]
    type_move_damage_classes: [Type]
}

type Movedamageclassdescription {
    description: String!
    id: ID!
    language: Language
    language_id: Integer
    move_damage_class_id: Integer
    movedamageclass_move_damage_class: Movedamageclas
}

type Movedamageclassname {
    id: ID!
    language: Language
    language_id: Integer
    move_damage_class_id: Integer
    movedamageclass_move_damage_class: Movedamageclas
    name: String!
}

type Moveeffect {
    id: ID!
    move_effects: [Move]
    movechange_move_effects: [Movechange]
    moveeffectchange_move_effects: [Moveeffectchange]
    moveeffecteffecttext_move_effects: [Moveeffecteffecttext]
}

type Moveeffectchange {
    id: ID!
    move_effect_id: Integer
    moveeffect_move_effect: Moveeffect
    moveeffectchangeeffecttext_move_effect_changes: [Moveeffectchangeeffecttext]
    version_group_id: Integer
    versiongroup_version_group: Versiongroup
}

type Moveeffectchangeeffecttext {
    effect: String!
    id: ID!
    language: Language
    language_id: Integer
    move_effect_change_id: Integer
    moveeffectchange_move_effect_change: Moveeffectchange
}

type Moveeffecteffecttext {
    effect: String!
    id: ID!
    language: Language
    language_id: Integer
    move_effect_id: Integer
    moveeffect_move_effect: Moveeffect
    short_effect: String!
}

type Moveflavortext {
    flavor_text: String!
    id: ID!
    language: Language
    language_id: Integer
    move: Move
    move_id: Integer
    version_group_id: Integer
    versiongroup_version_group: Versiongroup
}

type Movelearnmethod {
    id: ID!
    movelearnmethoddescription_move_learn_methods: [Movelearnmethoddescription]
    movelearnmethodname_move_learn_methods: [Movelearnmethodname]
    name: String!
    pokemonmove_move_learn_methods: [Pokemonmove]
    versiongroupmovelearnmethod_move_learn_methods: [Versiongroupmovelearnmethod]
}

type Movelearnmethoddescription {
    description: String!
    id: ID!
    language: Language
    language_id: Integer
    move_learn_method_id: Integer
    movelearnmethod_move_learn_method: Movelearnmethod
}

type Movelearnmethodname {
    id: ID!
    language: Language
    language_id: Integer
    move_learn_method_id: Integer
    movelearnmethod_move_learn_method: Movelearnmethod
    name: String!
}

type Movemetum {
    ailment_chance: Integer
    crit_rate: Integer
    drain: Integer
    flinch_chance: Integer
    healing: Integer
    id: ID!
    max_hits: Integer
    max_turns: Integer
    min_hits: Integer
    min_turns: Integer
    move: Move
    move_id: Integer!
    move_meta_ailment_id: Integer
    move_meta_category_id: Integer
    movemetaailment_move_meta_ailment: Movemetaailment
    movemetacategory_move_meta_category: Movemetacategory
    stat_chance: Integer
}

type Movemetaailment {
    id: ID!
    movemetaailmentname_move_meta_ailments: [Movemetaailmentname]
    movemetum_move_meta_ailments: [Movemetum]
    name: String!
}

type Movemetaailmentname {
    id: ID!
    language: Language
    language_id: Integer
    move_meta_ailment_id: Integer
    movemetaailment_move_meta_ailment: Movemetaailment
    name: String!
}

type Movemetacategory {
    id: ID!
    movemetacategorydescription_move_meta_categories: [Movemetacategorydescription]
    movemetum_move_meta_categories: [Movemetum]
    name: String!
}

type Movemetacategorydescription {
    description: String!
    id: ID!
    language: Language
    language_id: Integer
    move_meta_category_id: Integer
    movemetacategory_move_meta_category: Movemetacategory
}

type Movemetastatchange {
    change: Integer!
    id: ID!
    move: Move
    move_id: Integer
    stat: Stat
    stat_id: Integer
}

type Movename {
    id: ID!
    language: Language
    language_id: Integer
    move: Move
    move_id: Integer
    name: String!
}

type Movetarget {
    id: ID!
    move_targets: [Move]
    movetargetdescription_move_targets: [Movetargetdescription]
    movetargetname_move_targets: [Movetargetname]
    name: String!
}

type Movetargetdescription {
    description: String!
    id: ID!
    language: Language
    language_id: Integer
    move_target_id: Integer
    movetarget_move_target: Movetarget
}

type Movetargetname {
    id: ID!
    language: Language
    language_id: Integer
    move_target_id: Integer
    movetarget_move_target: Movetarget
    name: String!
}

type Nature {
    berryflavor_hates_flavor: Berryflavor
    berryflavor_likes_flavor: Berryflavor
    decreased_stat_id: Integer
    game_index: Integer!
    hates_flavor_id: Integer
    id: ID!
    increased_stat_id: Integer
    likes_flavor_id: Integer
    name: String!
    naturebattlestylepreference_natures: [Naturebattlestylepreference]
    naturename_natures: [Naturename]
    naturepokeathlonstat_natures: [Naturepokeathlonstat]
    stat_decreased: Stat
    stat_increased: Stat
}

type Naturebattlestylepreference {
    high_hp_preference: Integer!
    id: ID!
    low_hp_preference: Integer!
    move_battle_style_id: Integer
    movebattlestyle_move_battle_style: Movebattlestyle
    nature: Nature
    nature_id: Integer
}

type Naturename {
    id: ID!
    language: Language
    language_id: Integer
    name: String!
    nature: Nature
    nature_id: Integer
}

type Naturepokeathlonstat {
    id: ID!
    max_change: Integer!
    nature: Nature
    nature_id: Integer
    pokeathlon_stat_id: Integer
    pokeathlonstat_pokeathlon_stat: Pokeathlonstat
}

type Palpark {
    base_score: Integer
    id: ID!
    pal_park_area_id: Integer
    palparkarea_pal_park_area: Palparkarea
    pokemon_species_id: Integer
    pokemonspecy_pokemon_specy: Pokemonspecy
    rate: Integer!
}

type Palparkarea {
    id: ID!
    name: String!
    palpark_pal_park_areas: [Palpark]
    palparkareaname_pal_park_areas: [Palparkareaname]
}

type Palparkareaname {
    id: ID!
    language: Language
    language_id: Integer
    name: String!
    pal_park_area_id: Integer
    palparkarea_pal_park_area: Palparkarea
}

type Pokeathlonstat {
    id: ID!
    name: String!
    naturepokeathlonstat_pokeathlon_stats: [Naturepokeathlonstat]
    pokeathlonstatname_pokeathlon_stats: [Pokeathlonstatname]
}

type Pokeathlonstatname {
    id: ID!
    language: Language
    language_id: Integer
    name: String!
    pokeathlon_stat_id: Integer
    pokeathlonstat_pokeathlon_stat: Pokeathlonstat
}

type Pokedex {
    id: ID!
    is_main_series: bool!
    name: String!
    pokedexdescription_pokedexes: [Pokedexdescription]
    pokedexname_pokedexes: [Pokedexname]
    pokedexversiongroup_pokedexes: [Pokedexversiongroup]
    pokemondexnumber_pokedexes: [Pokemondexnumber]
    region: Region
    region_id: Integer
}

type Pokedexdescription {
    description: String!
    id: ID!
    language: Language
    language_id: Integer
    pokedex: Pokedex
    pokedex_id: Integer
}

type Pokedexname {
    id: ID!
    language: Language
    language_id: Integer
    name: String!
    pokedex: Pokedex
    pokedex_id: Integer
}

type Pokedexversiongroup {
    id: ID!
    pokedex: Pokedex
    pokedex_id: Integer
    version_group_id: Integer
    versiongroup_version_group: Versiongroup
}

type Pokemonability {
    ability: Ability
    ability_id: Integer
    id: ID!
    is_hidden: bool!
    pokemon: Pokemon
    pokemon_id: Integer
    slot: Integer!
}

type Pokemoncolor {
    id: ID!
    name: String!
    pokemoncolorname_pokemon_colors: [Pokemoncolorname]
    pokemonspecy_pokemon_colors: [Pokemonspecy]
}

type Pokemoncolorname {
    id: ID!
    language: Language
    language_id: Integer
    name: String!
    pokemon_color_id: Integer
    pokemoncolor_pokemon_color: Pokemoncolor
}

type Pokemondexnumber {
    id: ID!
    pokedex: Pokedex
    pokedex_id: Integer
    pokedex_number: Integer!
    pokemon_species_id: Integer
    pokemonspecy_pokemon_specy: Pokemonspecy
}

type Pokemonegggroup {
    egg_group_id: Integer
    egggroup_egg_group: Egggroup
    id: ID!
    pokemon_species_id: Integer
    pokemonspecy_pokemon_specy: Pokemonspecy
}

type Pokemonevolution {
    evolution_item_id: Integer
    evolution_trigger_id: Integer
    evolutiontrigger_evolution_trigger: Evolutiontrigger
    evolved_species_id: Integer
    gender: Gender
    gender_id: Integer
    held_item_id: Integer
    id: ID!
    item_evolution: Item
    item_held: Item
    known_move_id: Integer
    known_move_type_id: Integer
    location: Location
    location_id: Integer
    min_affection: Integer
    min_beauty: Integer
    min_happiness: Integer
    min_level: Integer
    move_known: Move
    needs_overworld_rain: bool!
    party_species_id: Integer
    party_type_id: Integer
    pokemonspecy_evolved_specy: Pokemonspecy
    pokemonspecy_party_specy: Pokemonspecy
    pokemonspecy_trade_specy: Pokemonspecy
    relative_physical_stats: Integer
    time_of_day: String
    trade_species_id: Integer
    turn_upside_down: bool!
    type_known_move: Type
    type_party: Type
}

type Pokemonform {
    form_name: String!
    form_order: Integer
    id: ID!
    is_battle_only: bool!
    is_default: bool!
    is_mega: bool!
    name: String!
    order: Integer
    pokemon: Pokemon
    pokemon_id: Integer
    pokemonformgeneration_pokemon_forms: [Pokemonformgeneration]
    pokemonformname_pokemon_forms: [Pokemonformname]
    pokemonformsprite_pokemon_forms: [Pokemonformsprite]
    version_group_id: Integer
    versiongroup_version_group: Versiongroup
}

type Pokemonformgeneration {
    game_index: Integer!
    generation: Generation
    generation_id: Integer
    id: ID!
    pokemon_form_id: Integer
    pokemonform_pokemon_form: Pokemonform
}

type Pokemonformname {
    id: ID!
    language: Language
    language_id: Integer
    name: String!
    pokemon_form_id: Integer
    pokemon_name: String!
    pokemonform_pokemon_form: Pokemonform
}

type Pokemonformsprite {
    id: ID!
    pokemon_form_id: Integer
    pokemonform_pokemon_form: Pokemonform
    sprites: String!
}

type Pokemongameindex {
    game_index: Integer!
    id: ID!
    pokemon: Pokemon
    pokemon_id: Integer
    version: Version
    version_id: Integer
}

type Pokemonhabitat {
    id: ID!
    name: String!
    pokemonhabitatname_pokemon_habitats: [Pokemonhabitatname]
    pokemonspecy_pokemon_habitats: [Pokemonspecy]
}

type Pokemonhabitatname {
    id: ID!
    language: Language
    language_id: Integer
    name: String!
    pokemon_habitat_id: Integer
    pokemonhabitat_pokemon_habitat: Pokemonhabitat
}

type Pokemonitem {
    id: ID!
    item: Item
    item_id: Integer
    pokemon: Pokemon
    pokemon_id: Integer
    rarity: Integer!
    version: Version
    version_id: Integer
}

type Pokemonmove {
    id: ID!
    level: Integer!
    move: Move
    move_id: Integer
    move_learn_method_id: Integer
    movelearnmethod_move_learn_method: Movelearnmethod
    order: Integer
    pokemon: Pokemon
    pokemon_id: Integer
    version_group_id: Integer
    versiongroup_version_group: Versiongroup
}

type Pokemonshape {
    id: ID!
    name: String!
    pokemonshapename_pokemon_shapes: [Pokemonshapename]
    pokemonspecy_pokemon_shapes: [Pokemonspecy]
}

type Pokemonshapename {
    awesome_name: String!
    id: ID!
    language: Language
    language_id: Integer
    name: String!
    pokemon_shape_id: Integer
    pokemonshape_pokemon_shape: Pokemonshape
}

type Pokemonspecy {
    base_happiness: Integer!
    capture_rate: Integer!
    evolution_chain_id: Integer
    evolutionchain_evolution_chain: Evolutionchain
    evolves_from_species_id: Integer
    forms_switchable: bool!
    gender_rate: Integer!
    generation: Generation
    generation_id: Integer
    growth_rate_id: Integer
    growthrate_growth_rate: Growthrate
    has_gender_differences: bool!
    hatch_counter: Integer!
    id: ID!
    is_baby: bool!
    name: String!
    order: Integer
    palpark_pokemon_species: [Palpark]
    pokemon_color_id: Integer
    pokemon_habitat_id: Integer
    pokemon_shape_id: Integer
    pokemon_species: [Pokemon]
    pokemoncolor_pokemon_color: Pokemoncolor
    pokemondexnumber_pokemon_species: [Pokemondexnumber]
    pokemonegggroup_pokemon_species: [Pokemonegggroup]
    pokemonevolution_evolved_species: [Pokemonevolution]
    pokemonevolution_party_species: [Pokemonevolution]
    pokemonevolution_trade_species: [Pokemonevolution]
    pokemonhabitat_pokemon_habitat: Pokemonhabitat
    pokemonshape_pokemon_shape: Pokemonshape
    pokemonspeciesdescription_pokemon_species: [Pokemonspeciesdescription]
    pokemonspeciesflavortext_pokemon_species: [Pokemonspeciesflavortext]
    pokemonspeciesname_pokemon_species: [Pokemonspeciesname]
    pokemonspecy_evolves_from_species: [Pokemonspecy]
    pokemonspecy_evolves_from_specy: Pokemonspecy
}

type Pokemonspeciesdescription {
    description: String!
    id: ID!
    language: Language
    language_id: Integer
    pokemon_species_id: Integer
    pokemonspecy_pokemon_specy: Pokemonspecy
}

type Pokemonspeciesflavortext {
    flavor_text: String!
    id: ID!
    language: Language
    language_id: Integer
    pokemon_species_id: Integer
    pokemonspecy_pokemon_specy: Pokemonspecy
    version: Version
    version_id: Integer
}

type Pokemonspeciesname {
    genus: String!
    id: ID!
    language: Language
    language_id: Integer
    name: String!
    pokemon_species_id: Integer
    pokemonspecy_pokemon_specy: Pokemonspecy
}

type Pokemonsprite {
    id: ID!
    pokemon: Pokemon
    pokemon_id: Integer
    sprites: String!
}

type Pokemonstat {
    base_stat: Integer!
    effort: Integer!
    id: ID!
    pokemon: Pokemon
    pokemon_id: Integer
    stat: Stat
    stat_id: Integer
}

type Pokemontype {
    id: ID!
    pokemon: Pokemon
    pokemon_id: Integer
    slot: Integer!
    type: Type
    type_id: Integer
}

type Region {
    generation_regions: [Generation]
    id: ID!
    location_regions: [Location]
    name: String!
    pokedex_regions: [Pokedex]
    regionname_regions: [Regionname]
    versiongroupregion_regions: [Versiongroupregion]
}

type Regionname {
    id: ID!
    language: Language
    language_id: Integer
    name: String!
    region: Region
    region_id: Integer
}

type Stat {
    characteristic_stats: [Characteristic]
    game_index: Integer!
    id: ID!
    is_battle_only: bool!
    move_damage_class_id: Integer
    movedamageclass_move_damage_class: Movedamageclas
    movemetastatchange_stats: [Movemetastatchange]
    name: String!
    nature_decreased_stats: [Nature]
    nature_increased_stats: [Nature]
    pokemonstat_stats: [Pokemonstat]
    statname_stats: [Statname]
}

type Statname {
    id: ID!
    language: Language
    language_id: Integer
    name: String!
    stat: Stat
    stat_id: Integer
}

type Supercontestcombo {
    first_move_id: Integer
    id: ID!
    move_first: Move
    move_second: Move
    second_move_id: Integer
}

type Supercontesteffect {
    appeal: Integer!
    id: ID!
    move_super_contest_effects: [Move]
    supercontesteffectflavortext_super_contest_effects: [Supercontesteffectflavortext]
}

type Supercontesteffectflavortext {
    flavor_text: String!
    id: ID!
    language: Language
    language_id: Integer
    super_contest_effect_id: Integer
    supercontesteffect_super_contest_effect: Supercontesteffect
}

type Type {
    berry_natural_gift_types: [Berry]
    generation: Generation
    generation_id: Integer
    id: ID!
    move_damage_class_id: Integer
    move_types: [Move]
    movechange_types: [Movechange]
    movedamageclass_move_damage_class: Movedamageclas
    name: String!
    pokemonevolution_known_move_types: [Pokemonevolution]
    pokemonevolution_party_types: [Pokemonevolution]
    pokemontype_types: [Pokemontype]
    typeefficacy_damage_types: [Typeefficacy]
    typeefficacy_target_types: [Typeefficacy]
    typegameindex_types: [Typegameindex]
    typename_types: [Typename]
}

type Typeefficacy {
    damage_factor: Integer!
    damage_type_id: Integer
    id: ID!
    target_type_id: Integer
    type_damage: Type
    type_target: Type
}

type Typegameindex {
    game_index: Integer!
    generation: Generation
    generation_id: Integer
    id: ID!
    type: Type
    type_id: Integer
}

type Typename {
    id: ID!
    language: Language
    language_id: Integer
    name: String!
    type: Type
    type_id: Integer
}

type Version {
    encounter_versions: [Encounter]
    id: ID!
    locationareaencounterrate_versions: [Locationareaencounterrate]
    name: String!
    pokemongameindex_versions: [Pokemongameindex]
    pokemonitem_versions: [Pokemonitem]
    pokemonspeciesflavortext_versions: [Pokemonspeciesflavortext]
    version_group_id: Integer
    versiongroup_version_group: Versiongroup
    versionname_versions: [Versionname]
}

type Versiongroup {
    abilitychange_version_groups: [Abilitychange]
    abilityflavortext_version_groups: [Abilityflavortext]
    encounterslot_version_groups: [Encounterslot]
    generation: Generation
    generation_id: Integer
    id: ID!
    itemflavortext_version_groups: [Itemflavortext]
    machine_version_groups: [Machine]
    movechange_version_groups: [Movechange]
    moveeffectchange_version_groups: [Moveeffectchange]
    moveflavortext_version_groups: [Moveflavortext]
    name: String!
    order: Integer
    pokedexversiongroup_version_groups: [Pokedexversiongroup]
    pokemonform_version_groups: [Pokemonform]
    pokemonmove_version_groups: [Pokemonmove]
    version_groups: [Version]
    versiongroupmovelearnmethod_version_groups: [Versiongroupmovelearnmethod]
    versiongroupregion_version_groups: [Versiongroupregion]
}

type Versiongroupmovelearnmethod {
    id: ID!
    move_learn_method_id: Integer
    movelearnmethod_move_learn_method: Movelearnmethod
    version_group_id: Integer
    versiongroup_version_group: Versiongroup
}

type Versiongroupregion {
    id: ID!
    region: Region
    region_id: Integer
    version_group_id: Integer
    versiongroup_version_group: Versiongroup
}

type Versionname {
    id: ID!
    language: Language
    language_id: Integer
    name: String!
    version: Version
    version_id: Integer
}

type TastypieApiacces {
    accessed: Integer!
    id: ID!
    identifier: String!
    request_method: String!
    url: String!
}

type TastypieApikey {
    auth_user: AuthUser
    created: datetime!
    id: ID!
    key: String!
    user_id: Integer!
}
